package p1;

import java.util.Scanner;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;

class Counter{
    int count;
    void inc() {
        count = count+1;
    }
    int getCount() {
        return count;
    }
}

public class Exe1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Scanner scanner = new Scanner(System. in); 
		String input = scanner. nextLine();
		 // create a pool of threads, 10 max jobs will execute in parallel
		 ExecutorService threadPool = Executors.newFixedThreadPool(10);
		 // submit jobs to be executing by the pool
		 for (int i = 0; i < Integer.parseInt(input); i++) {
		    threadPool.submit(new Runnable() {
		         public void run() {
		             // some code to run in parallel
		         }
		     });
		 }
		 // once you've submitted your last job to the service it should be shut down
		 threadPool.shutdown();
		 // wait for the threads to finish if necessary
		 threadPool.awaitTermination(Long.MAX_VALUE, TimeUnit.MILLISECONDS);
		
		
		
		

	}

}
